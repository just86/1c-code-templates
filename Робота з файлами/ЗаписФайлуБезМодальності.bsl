// Запис файлу з інформаційної бази без модальних діалогів
// Використання асинхронних методів для завантаження файлів

// ==================== КЛІЄНТСЬКА ЧАСТИНА ====================

&НаКлиенте
Процедура ЗаписатиФайл(Команда)
    
    // Створюємо файл на сервері та отримуємо адресу у тимчасовому сховищі
    АдресФайлаВоВременномХранилище = СоздатьФайлВыгрузки();
    
    // Параметри діалогу без модального вікна
    ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов(
        "Виберіть місце збереження файлу", 
        Ложь  // Множинний вибір відключений
    );
    
    // Асинхронне завантаження файлу (без блокування інтерфейсу)
    // Третій параметр - оповіщення після завершення (можна додати при потребі)
    НачатьПолучениеФайлаССервера(
        АдресФайлаВоВременномХранилище, 
        "Файл_вивантаження.txt", 
        ПараметрыДиалога
    );
    
КонецПроцедуры


&НаКлиенте
Процедура ОповещениеПослеПолученияФайла(ПолученныйФайл, ДополнительныеПараметры) Экспорт
    
    // Обробка після успішного завантаження файлу
    // ПолученныйФайл - структура з інформацією про завантажений файл
    
    Если ПолученныйФайл <> Неопределено Тогда
        Сообщить("Файл успішно збережено: " + ПолученныйФайл.Имя);
    КонецЕсли;
    
КонецПроцедуры


// ==================== СЕРВЕРНА ЧАСТИНА ====================

&НаСервере
Функция СоздатьФайлВыгрузки()
    
    // Створюємо тимчасовий файл на сервері
    ИмяФайла = ПолучитьИмяВременногоФайла("txt");
    
    // Запис даних у файл
    ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла, "UTF-8");  // Рекомендовано UTF-8 замість CESU-8
    ЗаписьТекста.Записать("Приклад вмісту файлу");
    ЗаписьТекста.Закрыть();
    
    // Поміщаємо файл у тимчасове сховище
    АдресХранилища = ПоместитьВоВременноеХранилище(
        Новый ДвоичныеДанные(ИмяФайла),
        УникальныйИдентификатор  // Прив'язка до форми
    );
    
    // Видаляємо тимчасовий файл з сервера
    Попытка
        УдалитьФайлы(ИмяФайла);
    Исключение
        // Логування помилки при потребі
    КонецПопытки;
    
    Возврат АдресХранилища;
    
КонецФункции


// ==================== ВАРІАНТ З ОПОВІЩЕННЯМ ====================

&НаКлиенте
Процедура ЗаписатиФайлСОповещением(Команда)
    
    АдресФайлаВоВременномХранилище = СоздатьФайлВыгрузки();
    
    ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов(
        "Виберіть місце збереження", 
        Ложь
    );
    
    // Оповіщення про завершення завантаження
    ОписаниеОповещения = Новый ОписаниеОповещения(
        "ОповещениеПослеПолученияФайла", 
        ЭтотОбъект
    );
    
    НачатьПолучениеФайлаССервера(
        ОписаниеОповещения,
        АдресФайлаВоВременномХранилище, 
        "Результат_експорту.txt", 
        ПараметрыДиалога
    );
    
КонецПроцедуры


// ==================== РЕКОМЕНДАЦІЇ ====================
//
// 1. Використовуйте UTF-8 для кодування текстових файлів
// 2. Завжди прив'язуйте тимчасове сховище до УникальныйИдентификатор форми
// 3. Видаляйте тимчасові файли після поміщення у сховище
// 4. Використовуйте асинхронні методи (Начать...) для неблокуючих операцій
// 5. Додавайте оповіщення для відстеження успіху операції
//
// ==================== ПЕРЕВАГИ АСИНХРОННИХ МЕТОДІВ ====================
//
// ✅ Інтерфейс не блокується під час завантаження
// ✅ Користувач може продовжувати роботу
// ✅ Краща продуктивність для великих файлів
// ✅ Можливість обробки помилок через оповіщення
